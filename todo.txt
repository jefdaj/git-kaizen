minimum viable code to get it running:
  Main
    main
    mainLoop
  Git
    confirmRepoClean
    confirmExpectedChanges
    commitChanges
  CLI
    userPickNextSteps
    parseNextSteps
    stopAndExplain
    userAnswerYesNo
    nextStepsProgressSpinner
  Run
    runListInputs
    runListOutputs
    runMainScript
    setupTmpdir
    teardownTmpdir
    withCustomTmpdir
    logging fn > kaizen.log in tmpdir
    runNextSteps
  Config
    loadConfig
    overrideConfig
    def

investigate alternative technologies:
  check that ansible playbooks don't basically do what you want before continuing
  consider cue as a task description language
  consider dhall as a task description language
  consider jsonnet as a task description language
  could the experimental forward build section of shake and/or rattle be helpful?

start writing docs in haddock:
  read https://mmhaskell.com/blog/comments-in-haskell
  read https://haskell-haddock.readthedocs.io/en/latest/markup.html

start config + docopt + logging based on Ortholang:
  Types.Config type
  loadConfig used in main
  Ortholang.Interpreter.Config ... how much of that would I need? seems very verbose now

command running:
  can you base a lot of this on ortholang too?
  also check how git-annex does it

tree traversals:
  base on gander by default
  but check first what's currently popular
  ideally you'll be able to merge/interoperate them later
  go with haskell tree traversals first
  you can restrict them to emulate regex etc later
